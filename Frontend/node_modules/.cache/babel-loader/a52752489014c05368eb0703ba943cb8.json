{"ast":null,"code":"import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer } from 'leaflet';\nexport const WMSTileLayer = createTileLayerComponent(function createWMSTileLayer(_ref, context) {\n  let {\n    params = {},\n    url,\n    ...options\n  } = _ref;\n  const layer = new TileLayer.WMS(url, { ...params,\n    ...withPane(options, context)\n  });\n  return createElementObject(layer, context);\n}, function updateWMSTileLayer(layer, props, prevProps) {\n  updateGridLayer(layer, props, prevProps);\n\n  if (props.params != null && props.params !== prevProps.params) {\n    layer.setParams(props.params);\n  }\n});","map":{"version":3,"sources":["/Users/mahitamaddipati/Downloads/reportincidentsnew/node_modules/react-leaflet/lib/WMSTileLayer.js"],"names":["createElementObject","createTileLayerComponent","updateGridLayer","withPane","TileLayer","WMSTileLayer","createWMSTileLayer","context","params","url","options","layer","WMS","updateWMSTileLayer","props","prevProps","setParams"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,wBAA9B,EAAwDC,eAAxD,EAAyEC,QAAzE,QAAyF,qBAAzF;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAO,MAAMC,YAAY,GAAGJ,wBAAwB,CAAC,SAASK,kBAAT,OAA+DC,OAA/D,EAAwE;AAAA,MAA5C;AAAEC,IAAAA,MAAM,GAAE,EAAV;AAAeC,IAAAA,GAAf;AAAqB,OAAGC;AAAxB,GAA4C;AACzH,QAAMC,KAAK,GAAG,IAAIP,SAAS,CAACQ,GAAd,CAAkBH,GAAlB,EAAuB,EACjC,GAAGD,MAD8B;AAEjC,OAAGL,QAAQ,CAACO,OAAD,EAAUH,OAAV;AAFsB,GAAvB,CAAd;AAIA,SAAOP,mBAAmB,CAACW,KAAD,EAAQJ,OAAR,CAA1B;AACH,CANmD,EAMjD,SAASM,kBAAT,CAA4BF,KAA5B,EAAmCG,KAAnC,EAA0CC,SAA1C,EAAqD;AACpDb,EAAAA,eAAe,CAACS,KAAD,EAAQG,KAAR,EAAeC,SAAf,CAAf;;AACA,MAAID,KAAK,CAACN,MAAN,IAAgB,IAAhB,IAAwBM,KAAK,CAACN,MAAN,KAAiBO,SAAS,CAACP,MAAvD,EAA+D;AAC3DG,IAAAA,KAAK,CAACK,SAAN,CAAgBF,KAAK,CAACN,MAAtB;AACH;AACJ,CAXmD,CAA7C","sourcesContent":["import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer } from 'leaflet';\nexport const WMSTileLayer = createTileLayerComponent(function createWMSTileLayer({ params ={} , url , ...options }, context) {\n    const layer = new TileLayer.WMS(url, {\n        ...params,\n        ...withPane(options, context)\n    });\n    return createElementObject(layer, context);\n}, function updateWMSTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    if (props.params != null && props.params !== prevProps.params) {\n        layer.setParams(props.params);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}