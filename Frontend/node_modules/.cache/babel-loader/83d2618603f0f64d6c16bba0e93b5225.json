{"ast":null,"code":"var _jsxFileName = \"/Users/sunitha/reportincidents/src/components/search-filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchFilter() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [searchApiData, setSearchApiData] = useState([]);\n  const [filterVal, setFilterVal] = useState('');\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(`https://jsonplaceholder.typicode.com/users/${name}`).then(response => response.json()).then(json => {\n        setData(json);\n        setSearchApiData(json);\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const handleFilter = e => {\n    if (e.target.value === '') {\n      setData(searchApiData);\n    } else {\n      const filterResult = searchApiData.filter(item => item.name.toLowerCase().includes(e.target.value.toLowerCase()) || item.username.toLowerCase().includes(e.target.value.toLowerCase()));\n\n      if (filterResult.length > 0) {\n        setData(filterResult);\n      } else {\n        setData([{\n          \"name\": \"No Records\"\n        }]);\n      }\n    }\n\n    setFilterVal(e.target.value);\n  };\n\n  function deleteUser(username) {\n    alert(username);\n    fetch(`https://jsonplaceholder.typicode.com/users/${username}`, {\n      method: 'DELETE'\n    }).then(result => {\n      result.json().then(resp => {\n        console.warn(resp);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 20%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incident Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"Search..\",\n        value: filterVal,\n        onInput: e => handleFilter(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User-Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), data.map(item => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, item.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchFilter, \"E+sGw0p17sXsvlp2Zf3nbvyRXhk=\");\n\n_c = SearchFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFilter\");","map":{"version":3,"sources":["/Users/sunitha/reportincidents/src/components/search-filter.js"],"names":["React","useEffect","useState","SearchFilter","data","setData","searchApiData","setSearchApiData","filterVal","setFilterVal","fetchData","fetch","name","then","response","json","handleFilter","e","target","value","filterResult","filter","item","toLowerCase","includes","username","length","deleteUser","alert","method","result","resp","console","warn","margin","map","email","phone"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,cAAP;;AACA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAClC,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeH,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACI,aAAD,EAAeC,gBAAf,IAAiCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACd,UAAMS,SAAS,GAAC,MAAI;AAChBC,MAAAA,KAAK,CAAE,8CAA6CC,IAAK,EAApD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACNV,QAAAA,OAAO,CAACU,IAAD,CAAP;AACAR,QAAAA,gBAAgB,CAACQ,IAAD,CAAhB;AACH,OALT;AAMH,KAPD;;AAQAL,IAAAA,SAAS;AACZ,GAVY,EAUX,EAVW,CAAT;;AAWJ,QAAMM,YAAY,GAAEC,CAAD,IACnB;AACI,QAAGA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAiB,EAApB,EAAuB;AACnBd,MAAAA,OAAO,CAACC,aAAD,CAAP;AACH,KAFD,MAGI;AACA,YAAMc,YAAY,GAACd,aAAa,CAACe,MAAd,CAAqBC,IAAI,IAAGA,IAAI,CAACV,IAAL,CAAUW,WAAV,GAAwBC,QAAxB,CAAiCP,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeI,WAAf,EAAjC,KAAgED,IAAI,CAACG,QAAL,CAAcF,WAAd,GAA4BC,QAA5B,CAAqCP,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeI,WAAf,EAArC,CAA5F,CAAnB;;AACA,UAAGH,YAAY,CAACM,MAAb,GAAoB,CAAvB,EAAyB;AACzBrB,QAAAA,OAAO,CAACe,YAAD,CAAP;AACC,OAFD,MAGI;AACAf,QAAAA,OAAO,CAAC,CAAC;AAAC,kBAAO;AAAR,SAAD,CAAD,CAAP;AACH;AACJ;;AACDI,IAAAA,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAEH,GAhBD;;AAiBA,WAASQ,UAAT,CAAoBF,QAApB,EAA6B;AACzBG,IAAAA,KAAK,CAACH,QAAD,CAAL;AACAd,IAAAA,KAAK,CAAE,8CAA6Cc,QAAS,EAAxD,EAA0D;AAC3DI,MAAAA,MAAM,EAAC;AADoD,KAA1D,CAAL,CAEGhB,IAFH,CAESiB,MAAD,IAAU;AACdA,MAAAA,MAAM,CAACf,IAAP,GAAcF,IAAd,CAAoBkB,IAAD,IAAQ;AACvBC,QAAAA,OAAO,CAACC,IAAR,CAAaF,IAAb;AACH,OAFD;AAGH,KAND;AAOH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAACG,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,UAAjC;AAA4C,QAAA,KAAK,EAAE1B,SAAnD;AAA8D,QAAA,OAAO,EAAGS,CAAD,IAAKD,YAAY,CAACC,CAAD;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,6BACI;AAAA,gCAEA;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAUIb,IAAI,CAAC+B,GAAL,CAASb,IAAI,IAAG;AACZ,8BACI,QAAC,KAAD,CAAO,QAAP;AAAA,mCACA;AAAA,sCACI;AAAA,0BAAKA,IAAI,CAACV;AAAV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKU,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKH,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKd,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,aAAqBf,IAAI,CAACV,IAA1B;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWH,SAZD,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCC;;GA9EuBT,Y;;KAAAA,Y","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport './Search.css'\nexport default function SearchFilter(){\n    const[data,setData]=useState([])\n    const[searchApiData,setSearchApiData]=useState([])\n    const [filterVal,setFilterVal]=useState('')\n    useEffect(()=>{\n    const fetchData=()=>{\n        fetch(`https://jsonplaceholder.typicode.com/users/${name}`)\n            .then(response => response.json())\n            .then(json => {\n                    setData(json)\n                    setSearchApiData(json) \n                })\n    }\n    fetchData();\n},[])\nconst handleFilter=(e)=>\n{\n    if(e.target.value===''){\n        setData(searchApiData)\n    }\n    else{\n        const filterResult=searchApiData.filter(item =>item.name.toLowerCase().includes(e.target.value.toLowerCase())||item.username.toLowerCase().includes(e.target.value.toLowerCase()))\n        if(filterResult.length>0){\n        setData(filterResult)\n        }\n        else{\n            setData([{\"name\":\"No Records\"}])\n        }\n    }\n    setFilterVal(e.target.value)\n\n}\nfunction deleteUser(username){\n    alert(username)\n    fetch(`https://jsonplaceholder.typicode.com/users/${username}`,{\n        method:'DELETE'\n    }).then((result)=>{\n        result.json().then((resp)=>{\n            console.warn(resp)\n        })\n    })\n}\nreturn(\n    <div className='Search-container'>\n        <div style={{margin:'20px 20%'}}>\n            <h1>Incident Search</h1>\n            <input type=\"search\" placeholder='Search..' value={filterVal} onInput={(e)=>handleFilter(e)} />\n        </div>\n        <table>\n            <tbody>\n            \n            <tr>\n            <th>Name</th>\n            <th>User-Name</th>\n            <th>Email</th>\n            <th>Phone</th>\n            </tr>\n            \n            {\n                data.map(item =>{\n                    return(\n                        <React.Fragment key={item.name}>\n                        <tr>\n                            <td>{item.name}</td>\n                            <td>{item.username}</td>\n                            <td>{item.email}</td>\n                            <td>{item.phone}</td>\n                            \n                        </tr>\n                        </React.Fragment>\n                    )\n                })\n            }\n            \n            </tbody>\n        </table>\n    </div>\n)\n}"]},"metadata":{},"sourceType":"module"}