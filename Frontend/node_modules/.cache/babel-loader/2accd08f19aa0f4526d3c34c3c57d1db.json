{"ast":null,"code":"var _jsxFileName = \"/Users/sunitha/reportincidents/src/components/Crud.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Crudops from \"../Crudops\";\nimport Add from \"./Add\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Crud = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => setUsers(data)).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onAdd = async (name, email, id) => {\n    await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        id: id\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => {\n      if (res.status !== 201) {\n        return;\n      } else {\n        return res.json();\n      }\n    }).then(data => {\n      setUsers(users => [...users, data]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onDelete = async id => {\n    await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: 'DELETE'\n    }).then(res => {\n      if (res.status !== 200) {\n        return;\n      } else {\n        setUsers(users.filter(user => {\n          return user.id !== id;\n        }));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    alert(\"Incident deleted\");\n  };\n\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crud-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      align: \"center\",\n      children: \"LOG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Add, {\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(Crudops, {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        onDelete: onDelete\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Crud, \"SjRE+Wh7WTq/CnqUH4T+/qSC3y8=\");\n\n_c = Crud;\nexport default Crud;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crud\");","map":{"version":3,"sources":["/Users/sunitha/reportincidents/src/components/Crud.js"],"names":["React","useEffect","useState","Crudops","Add","Crud","users","setUsers","fetchData","fetch","then","res","json","data","catch","err","console","log","onAdd","name","email","id","method","body","JSON","stringify","headers","status","onDelete","filter","user","alert","map"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState} from \"react\";\nimport Crudops from \"../Crudops\";\nimport Add from \"./Add\";\n\nconst Crud=()=>{\n    const[users,setUsers]=useState([])\n        useEffect(()=>{\n            fetchData();\n        },[])\n        const fetchData= async()=>{\n            await fetch('https://jsonplaceholder.typicode.com/users')\n            .then((res)=>res.json())\n            .then((data)=>setUsers(data))\n            .catch((err)=>{\n            console.log(err)\n            })\n        }\n const onAdd=async(name,email,id)=>{\n    await fetch(`https://jsonplaceholder.typicode.com/users/${id}`,{\n        method:'POST',\n        body:JSON.stringify({\n            name:name,\n            email:email,\n            id:id\n        }),\n        headers:{\n            \"Content-type\":\"application/json; charset=UTF-8\",\n        }\n    })\n    .then((res)=>{\n        if(res.status!==201){\n            return\n        }else{\n            return res.json();\n        }\n    })\n    .then((data)=>{\n        setUsers((users)=>[...users,data]);\n    })\n    .catch((err)=>{\n        console.log(err);\n    })\n}\n const onDelete=async(id) => {\n    \n    await fetch(`https://jsonplaceholder.typicode.com/users/${id}`,{\n    method:'DELETE'\n})\n.then((res)=>{\n    if(res.status!==200){\n        return\n    }else{\n        setUsers(users.filter((user)=>{\n            return user.id !==id\n        }))\n    }\n})\n.catch((err)=>{\n    console.log(err)\n})\nalert(\"Incident deleted\")\n}\n        console.log(users)\n    return(\n        <div className=\"crud-container\">\n            <h3 align='center'>LOG</h3>\n            <br />\n            <Add onAdd={onAdd}></Add>\n            <div>{\n                users.map((user)=>(\n                <Crudops id={user.id} \n                         key={user.id} \n                         name={user.name} \n                         email={user.email} \n                         onDelete={onDelete}/>\n                ))\n}\n            </div>\n        </div>\n    )\n\n}\nexport default Crud\n"]},"metadata":{},"sourceType":"module"}