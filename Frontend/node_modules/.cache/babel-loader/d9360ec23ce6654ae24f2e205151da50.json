{"ast":null,"code":"var _jsxFileName = \"/Users/mahitamaddipati/Downloads/reportincidentsnew/src/components/Datetime.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Datetime extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.show = () => {\n      const date = new Date(); // Function to convert\n      // single digit input\n      // to two digits\n\n      const formatData = input => {\n        if (input > 9) {\n          return input;\n        } else return `0${input}`;\n      }; // Function to convert\n      // 24 Hour to 12 Hour clock\n\n\n      const formatHour = input => {\n        if (input > 12) {\n          return input - 12;\n        }\n\n        return input;\n      }; // Data about date\n\n\n      const format = {\n        dd: formatData(date.getDate()),\n        mm: formatData(date.getMonth() + 1),\n        yyyy: date.getFullYear(),\n        HH: formatData(date.getHours()),\n        hh: formatData(formatHour(date.getHours())),\n        MM: formatData(date.getMinutes()),\n        SS: formatData(date.getSeconds())\n      };\n\n      const format12Hour = _ref => {\n        let {\n          dd,\n          mm,\n          yyyy,\n          hh,\n          MM,\n          SS\n        } = _ref;\n        console.log(`${mm}/${dd}/${yyyy} ${hh}:${MM}:${SS}`);\n      }; // Time in 12 Hour format\n\n\n      format12Hour(format);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.show()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Datetime;","map":{"version":3,"sources":["/Users/mahitamaddipati/Downloads/reportincidentsnew/src/components/Datetime.js"],"names":["React","Component","Datetime","show","date","Date","formatData","input","formatHour","format","dd","getDate","mm","getMonth","yyyy","getFullYear","HH","getHours","hh","MM","getMinutes","SS","getSeconds","format12Hour","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAGjCE,IAHiC,GAG5B,MACL;AAAC,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb,CAAD,CAEE;AACA;AACA;;AACA,YAAMC,UAAU,GAAIC,KAAD,IAAW;AAC9B,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,iBAAOA,KAAP;AACD,SAFD,MAEO,OAAQ,IAAGA,KAAM,EAAjB;AACN,OAJD,CALF,CAWE;AACA;;;AACA,YAAMC,UAAU,GAAID,KAAD,IAAW;AAC9B,YAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,iBAAOA,KAAK,GAAG,EAAf;AACD;;AACD,eAAOA,KAAP;AACC,OALD,CAbF,CAoBE;;;AACA,YAAME,MAAM,GAAG;AACfC,QAAAA,EAAE,EAAEJ,UAAU,CAACF,IAAI,CAACO,OAAL,EAAD,CADC;AAEfC,QAAAA,EAAE,EAAEN,UAAU,CAACF,IAAI,CAACS,QAAL,KAAkB,CAAnB,CAFC;AAGfC,QAAAA,IAAI,EAAEV,IAAI,CAACW,WAAL,EAHS;AAIfC,QAAAA,EAAE,EAAEV,UAAU,CAACF,IAAI,CAACa,QAAL,EAAD,CAJC;AAKfC,QAAAA,EAAE,EAAEZ,UAAU,CAACE,UAAU,CAACJ,IAAI,CAACa,QAAL,EAAD,CAAX,CALC;AAMfE,QAAAA,EAAE,EAAEb,UAAU,CAACF,IAAI,CAACgB,UAAL,EAAD,CANC;AAOfC,QAAAA,EAAE,EAAEf,UAAU,CAACF,IAAI,CAACkB,UAAL,EAAD;AAPC,OAAf;;AASA,YAAMC,YAAY,GAAG,QAAkC;AAAA,YAAjC;AAAEb,UAAAA,EAAF;AAAME,UAAAA,EAAN;AAAUE,UAAAA,IAAV;AAAgBI,UAAAA,EAAhB;AAAoBC,UAAAA,EAApB;AAAwBE,UAAAA;AAAxB,SAAiC;AACvDG,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEb,EAAG,IAAGF,EAAG,IAAGI,IAAK,IAAGI,EAAG,IAAGC,EAAG,IAAGE,EAAG,EAAlD;AACC,OAFD,CA9BF,CAkCE;;;AACAE,MAAAA,YAAY,CAACd,MAAD,CAAZ;AAED,KAzCgC;AAAA;;AA2C/BiB,EAAAA,MAAM,GAAG;AAEL,wBACC;AAAA,gBACC,KAAKvB,IAAL;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAOH;;AApD8B;;AAuDjC,eAAeD,QAAf","sourcesContent":["import React,{Component} from 'react';\n\n\nclass Datetime extends Component {\n \n\nshow=()=>\n{const date = new Date();\n\n  // Function to convert\n  // single digit input\n  // to two digits\n  const formatData = (input) => {\n  if (input > 9) {\n    return input;\n  } else return `0${input}`;\n  };\n  \n  // Function to convert\n  // 24 Hour to 12 Hour clock\n  const formatHour = (input) => {\n  if (input > 12) {\n    return input - 12;\n  }\n  return input;\n  };\n  \n  // Data about date\n  const format = {\n  dd: formatData(date.getDate()),\n  mm: formatData(date.getMonth() + 1),\n  yyyy: date.getFullYear(),\n  HH: formatData(date.getHours()),\n  hh: formatData(formatHour(date.getHours())),\n  MM: formatData(date.getMinutes()),\n  SS: formatData(date.getSeconds()),\n  };\n  const format12Hour = ({ dd, mm, yyyy, hh, MM, SS }) => {\n  console.log(`${mm}/${dd}/${yyyy} ${hh}:${MM}:${SS}`);\n  };\n  \n  // Time in 12 Hour format\n  format12Hour(format);\n  \n}\n\n  render() {\n    \n      return (\n       <div>\n       {this.show()}\n       </div>\n      );\n    \n \n  }\n}\n\nexport default Datetime"]},"metadata":{},"sourceType":"module"}