{"ast":null,"code":"var _jsxFileName = \"/Users/varshareddy/Desktop/2022Report-incidents/Frontend/src/components/Mount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport Vote from \"./Vote\";\nimport './Mount.css';\nimport Leaflet from \"./Leaflet\";\nimport './Leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Search from \"./Search\";\n/*class Mount extends Component\n{  \n    constructor(props)\n    {\n   \n   super(props)\n   \n   this.state={\n    'output':[],\n      str:this.props.st,\n      latitude:'',\n      longitude:''\n \n\n   }\n \n\n}\n\n\ncomponentDidMount()\n{  \n  // Initialize the leaflet map\n\n\n  navigator.geolocation.getCurrentPosition((position)=> {\n    this.setState({\n      latitude:position.coords.latitude,\n      longitude:position.coords.longitude\n    })\n    \n    \n  });\n    \n     const url = 'http://localhost:9000/findall';\n   \n     let headers=new Headers();\n     headers.append('Content-Type','application/json');\n     headers.append('Accept','application/json');\n     headers.append('Access-control-Allow-origin',url);\n     headers.append('Access-control-Allow-Credentials','true');\n     headers.append('POST','GET');\n     fetch(url, {\n       headers: headers,\n       method: 'GET',\n     \n     })\n   \n        \n     .then(response => response.json()) \n     .then(response => this.setState({ 'output': response}))\n     .catch(() => console.log(\"can't access \" + url + \" response. \"))\n\n}\n\n\nrender()\n{       navigator.geolocation.getCurrentPosition((position)=> {\n  this.setState({\n    latitude:position.coords.latitude,\n    longitude:position.coords.longitude\n  })\n  \n  \n}); \n    return(\n        <div>\n          \n\n         <MapContainer center={[17.4352680,78.4363600]} zoom={15} scrollWheelZoom={true}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n      {this.state.output.map(item => (\n        <Marker \n        key={item.incidentId}\n        position={[item.latitude, item.longitude]}>\n          <Popup position={[item.latitude, item.longitude]}>\n          <div>\n          <h4>{\"Incident id :\" + item.incidentId}</h4>\n            <h4>{\"Device Id :\" + item.deviceId}</h4>\n            <h4>{\"Incident type:\" + item.incidentType}</h4>\n            <h4>{\"Incident subtype :\" + item.subtype}</h4>\n            <h4>{\"Damages :\" + item.damages}</h4>\n            <h4>{\"Severity Level :\" + item.severityLevel}</h4>\n            <h4>{\"Additional information:\" + item.incidentType}</h4>\n            <h4>{\"Location :\" + item.latitude+\",\"+item.longitude}</h4>\n            <h4>{\"Upvote :\" + item.upvote}</h4>\n            <h4>{\"Downvote:\" + item.downvote}</h4>\n            <h4>{\"Report count :\" + item.reportCount}</h4>\n            <h4>{\"Time reported:\" + item.timeStamp}</h4>\n            \n            \n          </div>\n          </Popup>\n        </Marker>\n      ))}\n\n\n\n\n    </MapContainer>\n    \n        </div>\n    )\n}\n}\n\nexport default Mount;\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mount() {\n  _s();\n\n  const [output, setoutput] = useState([]);\n  React.useState(() => {\n    const url = 'http://localhost:9000/findall';\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-control-Allow-origin', url);\n    headers.append('Access-control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'GET'\n    }).then(response => response.json()).then(response => {\n      setoutput(response);\n    }).catch(() => console.log(\"can't access \" + url + \" response. \"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [17.4352680, 78.4363600],\n      zoom: 15,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 8\n      }, this), output.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [item.latitude, item.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          position: [item.latitude, item.longitude],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Incident id :\" + item.incidentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Device Id :\" + item.deviceId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Incident type:\" + item.incidentType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Incident subtype :\" + item.subtype\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Damages :\" + item.damages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Severity Level :\" + item.severityLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Additional information:\" + item.incidentType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Location :\" + item.latitude + \",\" + item.longitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Upvote :\" + item.upvote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Downvote:\" + item.downvote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Report count :\" + item.reportCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Time reported:\" + item.timeStamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 12\n        }, this)\n      }, item.incidentId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 10\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Mount, \"sYXdfCFhBC1D+foXQ4SgC3I5+aM=\");\n\n_c = Mount;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mount\");","map":{"version":3,"sources":["/Users/varshareddy/Desktop/2022Report-incidents/Frontend/src/components/Mount.js"],"names":["React","useRef","useState","Vote","Leaflet","MapContainer","TileLayer","Marker","Popup","Search","Mount","output","setoutput","url","headers","Headers","append","fetch","method","then","response","json","catch","console","log","map","item","latitude","longitude","incidentId","deviceId","incidentType","subtype","damages","severityLevel","upvote","downvote","reportCount","timeStamp"],"mappings":"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","sourcesContent":["import React,{useRef, useState} from \"react\";\nimport Vote from \"./Vote\";\nimport'./Mount.css'\nimport Leaflet from \"./Leaflet\";\nimport './Leaflet.css'\nimport { MapContainer,TileLayer,Marker,Popup } from 'react-leaflet';\nimport Search from \"./Search\";\n\n\n/*class Mount extends Component\n{  \n    constructor(props)\n    {\n   \n   super(props)\n   \n   this.state={\n    'output':[],\n      str:this.props.st,\n      latitude:'',\n      longitude:''\n \n\n   }\n \n\n}\n\n\ncomponentDidMount()\n{  \n  // Initialize the leaflet map\n\n\n  navigator.geolocation.getCurrentPosition((position)=> {\n    this.setState({\n      latitude:position.coords.latitude,\n      longitude:position.coords.longitude\n    })\n    \n    \n  });\n    \n     const url = 'http://localhost:9000/findall';\n   \n     let headers=new Headers();\n     headers.append('Content-Type','application/json');\n     headers.append('Accept','application/json');\n     headers.append('Access-control-Allow-origin',url);\n     headers.append('Access-control-Allow-Credentials','true');\n     headers.append('POST','GET');\n     fetch(url, {\n       headers: headers,\n       method: 'GET',\n     \n     })\n   \n        \n     .then(response => response.json()) \n     .then(response => this.setState({ 'output': response}))\n     .catch(() => console.log(\"can't access \" + url + \" response. \"))\n\n}\n\n\nrender()\n{       navigator.geolocation.getCurrentPosition((position)=> {\n  this.setState({\n    latitude:position.coords.latitude,\n    longitude:position.coords.longitude\n  })\n  \n  \n}); \n    return(\n        <div>\n          \n\n         <MapContainer center={[17.4352680,78.4363600]} zoom={15} scrollWheelZoom={true}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n      {this.state.output.map(item => (\n        <Marker \n        key={item.incidentId}\n        position={[item.latitude, item.longitude]}>\n          <Popup position={[item.latitude, item.longitude]}>\n          <div>\n          <h4>{\"Incident id :\" + item.incidentId}</h4>\n            <h4>{\"Device Id :\" + item.deviceId}</h4>\n            <h4>{\"Incident type:\" + item.incidentType}</h4>\n            <h4>{\"Incident subtype :\" + item.subtype}</h4>\n            <h4>{\"Damages :\" + item.damages}</h4>\n            <h4>{\"Severity Level :\" + item.severityLevel}</h4>\n            <h4>{\"Additional information:\" + item.incidentType}</h4>\n            <h4>{\"Location :\" + item.latitude+\",\"+item.longitude}</h4>\n            <h4>{\"Upvote :\" + item.upvote}</h4>\n            <h4>{\"Downvote:\" + item.downvote}</h4>\n            <h4>{\"Report count :\" + item.reportCount}</h4>\n            <h4>{\"Time reported:\" + item.timeStamp}</h4>\n            \n            \n          </div>\n          </Popup>\n        </Marker>\n      ))}\n\n\n\n\n    </MapContainer>\n    \n        </div>\n    )\n}\n}\n\nexport default Mount;\n\n*/\n\n\nexport default function Mount(){\n\n  const[output,setoutput]=useState([])\n  \n  React.useState(() => {\n    \n \n  \n      const url = 'http://localhost:9000/findall';\n   \n     let headers=new Headers();\n     headers.append('Content-Type','application/json');\n     headers.append('Accept','application/json');\n     headers.append('Access-control-Allow-origin',url);\n     headers.append('Access-control-Allow-Credentials','true');\n     headers.append('POST','GET');\n     fetch(url, {\n       headers: headers,\n       method: 'GET',\n     \n     })\n   \n        \n     .then(response => response.json()) \n     .then(response=>{\n    setoutput(response)})\n  \n     .catch(() => console.log(\"can't access \" + url + \" response. \"))\n\n     \n  },[]);\n\nreturn(\n  <div>\n   \n     \n          <MapContainer center={[17.4352680,78.4363600]} zoom={15} scrollWheelZoom={true}>\n       <TileLayer\n         attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n       />\n \n       {output.map(item => (\n         <Marker \n         key={item.incidentId}\n         position={[item.latitude, item.longitude]}>\n           <Popup position={[item.latitude, item.longitude]}>\n           <div>\n           <h4>{\"Incident id :\" + item.incidentId}</h4>\n             <h4>{\"Device Id :\" + item.deviceId}</h4>\n             <h4>{\"Incident type:\" + item.incidentType}</h4>\n             <h4>{\"Incident subtype :\" + item.subtype}</h4>\n             <h4>{\"Damages :\" + item.damages}</h4>\n             <h4>{\"Severity Level :\" + item.severityLevel}</h4>\n             <h4>{\"Additional information:\" + item.incidentType}</h4>\n             <h4>{\"Location :\" + item.latitude+\",\"+item.longitude}</h4>\n             <h4>{\"Upvote :\" + item.upvote}</h4>\n             <h4>{\"Downvote:\" + item.downvote}</h4>\n             <h4>{\"Report count :\" + item.reportCount}</h4>\n             <h4>{\"Time reported:\" + item.timeStamp}</h4>\n             \n             \n           </div>\n           </Popup>\n         </Marker>\n       ))}\n \n \n \n \n     </MapContainer>\n     \n    \n</div>\n);\n\n}"]},"metadata":{},"sourceType":"module"}