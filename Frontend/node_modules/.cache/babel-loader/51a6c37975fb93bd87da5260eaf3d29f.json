{"ast":null,"code":"var _jsxFileName = \"/Users/sunitha/reportincidents/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Datatable from '../Datatable';\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"es6-promise\").polyfill();\n\nrequire(\"isomorphic-fetch\");\n\nexport default function Search() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/posts/1';\n    fetch(url).then(response => response.json()).then(json => setData(json));\n  }, []);\n\n  function search(rows) {\n    return rows.filter(row => row.Location.toLowerCase().indexof(q) > -1 || row.IncidentId.toLowerCase().indexof(q) > -1 || row.time.toLowerCase().indexof(q) > -1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: q,\n        onChange: e => setQ(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Datatable, {\n        data: search(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"4mMvBxXK8vhjXkTw56nYW1zAheY=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sunitha/reportincidents/src/components/Search.js"],"names":["React","useState","useEffect","Datatable","require","polyfill","Search","data","setData","q","setQ","url","fetch","then","response","json","search","rows","filter","row","Location","toLowerCase","indexof","IncidentId","time","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,YAAP;;;AACAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB;;AACAD,OAAO,CAAC,kBAAD,CAAP;;AAEA,eAAe,SAASE,MAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACQ,CAAD,EAAGC,IAAH,IAAUT,QAAQ,CAAC,EAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,GAAG,GAAC,8CAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEOE,IAAD,IAAQP,OAAO,CAACO,IAAD,CAFrB;AAGH,GALQ,EAKP,EALO,CAAT;;AAMA,WAASC,MAAT,CAAgBC,IAAhB,EAAqB;AACjB,WAAOA,IAAI,CAACC,MAAL,CAAaC,GAAD,IACnBA,GAAG,CAACC,QAAJ,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCb,CAAnC,IAAsC,CAAC,CAAvC,IACAU,GAAG,CAACI,UAAJ,CAAeF,WAAf,GAA6BC,OAA7B,CAAqCb,CAArC,IAAwC,CAAC,CADzC,IAEAU,GAAG,CAACK,IAAJ,CAASH,WAAT,GAAuBC,OAAvB,CAA+Bb,CAA/B,IAAkC,CAAC,CAH5B,CAAP;AAKH;;AACD,sBACI;AAAA,4BACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEA,CAA1B;AAA6B,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,IAAI,CAAEe,CAAC,CAACC,MAAF,CAASC,KAAX;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACG,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEX,MAAM,CAACT,IAAD;AAAvB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7BuBD,M;;KAAAA,M","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport Datatable from '../Datatable'\nimport \"../App.css\"\nrequire(\"es6-promise\").polyfill()\nrequire(\"isomorphic-fetch\")\n\nexport default function Search(){\n    const [data,setData]=useState([])\n    const [q,setQ] =useState(\"\")\n\n    useEffect(()=>{\n        const url='https://jsonplaceholder.typicode.com/posts/1'\n        fetch(url)\n        .then(response=>response.json())\n        .then((json)=>setData(json))\n    },[])\n    function search(rows){\n        return rows.filter((row )=>\n        row.Location.toLowerCase().indexof(q)>-1 ||\n        row.IncidentId.toLowerCase().indexof(q)>-1 ||\n        row.time.toLowerCase().indexof(q)>-1\n        )\n    }\n    return(\n        <div>\n            <div>\n                <input type=\"text\" value={q} onChange={(e) => setQ (e.target.value)} />\n            </div>\n            <div>\n               <Datatable data={search(data)}>\n                   \n               </Datatable>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}